// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum CompanySize {
  SMALL
  MEDIUM
  LARGE
}

model User {
  id             Int           @id @default(autoincrement())
  email          String        @unique
  name           String?
  hashedPassword String
  role           Role          @default(USER)
  company        Company?
  personalData   PersonalData?
  education      Education[]
}

model Company {
  id        Int         @id @default(autoincrement())
  name      String
  industry  String
  bio       String
  website   String
  linkedIn  String
  instagram String
  zip       String
  country   String
  city      String
  state     String
  size      CompanySize
  startDate DateTime
  userId    Int         @unique
  user      User        @relation(fields: [userId], references: [id])
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Education {
  id           Int       @id @default(autoincrement())
  institution  String
  degree       String
  fieldOfStudy String
  startDate    DateTime
  endDate      DateTime?
  description  String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  User         User      @relation(fields: [userId], references: [id])
  userId       Int
}

model PersonalData {
  id         Int      @id @default(autoincrement())
  firstName  String
  middleName String?
  lastName   String
  dob        DateTime
  street     String
  country    String
  phone      String
  city       String
  state      String
  zipCode    String
  bio        String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  User       User     @relation(fields: [userId], references: [id])
  userId     Int      @unique
}
